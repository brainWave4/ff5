memory {
    bank_c0: start = $c00000, size = $010000, type = ro, fill = yes, fillval = 0;
    bank_c1: start = $c10000, size = $010000, type = ro, fill = yes, fillval = 0;
    bank_c2: start = $c20000, size = $010000, type = ro, fill = yes, fillval = 0;
    bank_c3: start = $c30000, size = $010000, type = ro, fill = yes, fillval = 0;
    bank_c4: start = $c40000, size = $030000, type = ro, fill = yes, fillval = 0;
    bank_c7: start = $c70000, size = $030000, type = ro, fill = yes, fillval = 0;
    bank_ca: start = $ca0000, size = $010000, type = ro, fill = yes, fillval = 0;
    bank_cb: start = $cb0000, size = $030000, type = ro, fill = yes, fillval = 0;
    bank_ce: start = $ce0000, size = $010000, type = ro, fill = yes, fillval = 0;
    bank_cf: start = $cf0000, size = $010000, type = ro, fill = yes, fillval = 0;
    bank_d0: start = $d00000, size = $010000, type = ro, fill = yes, fillval = 0;
    bank_d1: start = $d10000, size = $010000, type = ro, fill = yes, fillval = 0;
    bank_d2: start = $d20000, size = $030000, type = ro, fill = yes, fillval = 0;
    bank_d5: start = $d50000, size = $040000, type = ro, fill = yes, fillval = 0;
    bank_d9: start = $d90000, size = $010000, type = ro, fill = yes, fillval = 0;
    bank_da: start = $da0000, size = $020000, type = ro, fill = yes, fillval = 0;
    bank_dc: start = $dc0000, size = $040000, type = ro, fill = yes, fillval = 0;
    bank_e0: start = $e00000, size = $010000, type = ro, fill = yes, fillval = $ff;
    bank_e1: start = $e10000, size = $060000, type = ro, fill = yes, fillval = $ff;
    bank_e7: start = $e70000, size = $010000, type = ro, fill = yes, fillval = $ff;
}

segments {
# bank $c0
    field_code: load = bank_c0, type = ro;
    reset: load = bank_c0, type = ro, start = $c0cec0;
    nmi_irq: load = bank_c0, type = ro, start = $c0cee0;
    unknown_c0cf00: load = bank_c0, type = ro;
    unknown_c0d240: load = bank_c0, type = ro;
    window_gfx: load = bank_c0, type = ro;
    overlay_prop: load = bank_c0, type = ro;
    map_overlay: load = bank_c0, type = ro, start = $c0df00;
    rng_tbl: load = bank_c0, type = ro, start = $c0fec0;
    snes_header: load = bank_c0, type = ro, start = $c0ffc0;
    vectors: load = bank_c0, type = ro, start = $c0ffe0;
# bank $c1
    battle_gfx_code: load = bank_c1, type = ro;
# bank $c2
    battle_code: load = bank_c2, type = ro;
    menu_code: load = bank_c2, type = ro, offset = $a000;
# bank $c3
    cutscene_code: load = bank_c3, type = ro;

    map_pal: load = bank_c3, type = ro, start = $c3bb00;

    big_font_gfx: load = bank_c3, type = ro, start = $c3eb00;

# bank $c4-$c6
    sound_code: load = bank_c4, type = ro;

# bank $c7-$c9
    world_tilemap: load = bank_c7, type = ro;

    dlg_ptrs: load = bank_c7, type = ro, start = $c82220;

    event_script: load = bank_c7, type = ro, start = $c83320;

# bank $ca
    dlg: load = bank_ca, type = ro;
# bank $cb-$cd
    sub_tilemap: load = bank_cb, type = ro;
    map_pal_anim: load = bank_cb, type = ro;
    sine_tbl: load = bank_cb, type = ro;
    timer_font_gfx: load = bank_cb, type = ro;
# bank $ce
    npc_script: load = bank_ce, type = ro;
    event_trigger: load = bank_ce, type = ro, start = $ce2400;
    entrance_trigger: load = bank_ce, type = ro, start = $ce36c0;
    npc_prop: load = bank_ce, type = ro;
    map_prop: load = bank_ce, type = ro, start = $ce9c00;
    monster_pal: load = bank_ce, type = ro;
    btlgfx_data1: load = bank_ce, type = ro, align = $0200;

# bank $cf
    map_tileset: load = bank_cf, type = ro;
    map_tile_prop: load = bank_cf, type = ro;
    minimap_gfx: load = bank_cf, type = ro, align = $0100;
    world_tilemap_ptrs: load = bank_cf, type = ro;
    world_tile_prop: load = bank_cf, type = ro;
    world_tileset: load = bank_cf, type = ro;
    world_tile_attr: load = bank_cf, type = ro;
    world_pal: load = bank_cf, type = ro;

# bank $d0
    monster_prop: load = bank_d0, type = ro;
    battle_prop: load = bank_d0, type = ro;
    monster_item: load = bank_d0, type = ro;
    monster_control: load = bank_d0, type = ro;
    monster_name: load = bank_d0, type = ro;
    rand_battle_grp: load = bank_d0, type = ro;
    map_title: load = bank_d0, type = ro;
    event_battle_grp: load = bank_d0, type = ro;
    world_battle_grp: load = bank_d0, type = ro;
    sub_battle_grp: load = bank_d0, type = ro;
    world_battle_rate: load = bank_d0, type = ro;
    sub_battle_rate: load = bank_d0, type = ro;
    monster_release: load = bank_d0, type = ro, align = $0100;
    monster_special_name: load = bank_d0, type = ro;
    monster_pos: load = bank_d0, type = ro;
    monster_special_prop: load = bank_d0, type = ro;
    ai_script: load = bank_d0, type = ro, start = $d09c00;

    monster_stencil: load = bank_d0, type = ro, start = $d0d000;
    btlgfx_data2: load = bank_d0, type = ro;
    the_end_gfx: load = bank_d0, type = ro;
    battle_data1: load = bank_d0, type = ro, align = $0100;
    battle_dlg: load = bank_d0, type = ro, align = $0100;
    battle_data2: load = bank_d0, type = ro, start = $d0ffa0;

# bank $d1
    item_prop1: load = bank_d1, type = ro;
    attack_prop: load = bank_d1, type = ro;
    item_name: load = bank_d1, type = ro, start = $d11380;
    attack_name: load = bank_d1, type = ro;
    item_prop2: load = bank_d1, type = ro, start = $d12480;
    status_name: load = bank_d1, type = ro;
    battle_data3: load = bank_d1, type = ro;

    shop_prop: load = bank_d1, type = ro, start = $d12a00;

    map_treasures: load = bank_d1, type = ro, start = $d13000;
    treasure_prop: load = bank_d1, type = ro;
    battle_msg: load = bank_d1, type = ro, start = $d13840;
    item_desc: load = bank_d1, type = ro, start = $d14000;
    level_up: load = bank_d1, type = ro, start = $d15000;
    job_ability: load = bank_d1, type = ro, start = $d152c0;

    job_name: load = bank_d1, type = ro, start = $d15600;
    job_prop: load = bank_d1, type = ro;
    battle_cmd_name: load = bank_d1, type = ro, start = $d15800;
    battle_cmd_prop: load = bank_d1, type = ro;
    passive_ability_name: load = bank_d1, type = ro, start = $d16200;
    passive_ability_prop: load = bank_d1, type = ro;
    special_ability_name: load = bank_d1, type = ro, start = $d16700;
    special_ability_prop: load = bank_d1, type = ro;
    char_prop: load = bank_d1, type = ro, start = $d17000;

    attack_gfx1: load = bank_d1, type = ro, start = $d17fa0;

    small_font_gfx: load = bank_d1, type = ro, start = $d1f000;

# bank $d2-$d4
    battle_char_gfx: load = bank_d2, type = ro;
    btlgfx_data3: load = bank_d2, type = ro;

    battle_bg: load = bank_d2, type = ro, start = $d4ba21;

# bank $d5-$d8
    monster_gfx: load = bank_d5, type = ro;
    btlgfx_data4: load = bank_d5, type = ro;
    battle_bg_gfx: load = bank_d5, type = ro;

    init_npc_switch: load = bank_d5, type = ro, start = $d8e000;
    event_cond: load = bank_d5, type = ro, start = $d8e080;

# bank $d9
    attack_gfx2: load = bank_d9, type = ro;
    btlgfx_code_far: load = bank_d9, type = ro;

# bank $da-$db
    map_sprite_gfx: load = bank_da, type = ro;
    world_gfx: load = bank_da, type = ro;
    kanji_gfx: load = bank_da, type = ro, start = $dbd000;

# bank $dc-$df
    map_gfx: load = bank_dc, type = ro;
    map_anim_gfx: load = bank_dc, type = ro, start = $df9b00;
    map_sprite_pal: load = bank_dc, type = ro, start = $dffc00;

# bank $e0
    rpge_code1: load = bank_e0, type = ro;
    monster_name_en: load = bank_e0, type = ro, start = $e00050;
    battle_cmd_name_en: load = bank_e0, type = ro, start = $e01150;
    dlg_en_ptrs: load = bank_e0, type = ro, start = $e013f0;
    rpge_code2: load = bank_e0, type = ro, start = $e02d40;

# bank $e1-$e6
    dlg_en: load = bank_e1, type = ro;

# bank $e7
    map_title_en: load = bank_e7, type = ro;
    special_ability_name_en: load = bank_e7, type = ro, start = $e70900;
    attack_name_short_en: load = bank_e7, type = ro, start = $e70f90;
    attack_name_long_en: load = bank_e7, type = ro, start = $e71780;
    battle_msg_en: load = bank_e7, type = ro, start = $e72760;
    monster_special_name_en: load = bank_e7, type = ro, start = $e73700;
    battle_dlg_en: load = bank_e7, type = ro, start = $e73b00;
    item_name_en: load = bank_e7, type = ro, start = $e75860;
    passive_ability_name_en: load = bank_e7, type = ro, start = $e77060;
}
